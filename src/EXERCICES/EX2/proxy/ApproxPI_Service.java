package EXERCICES.EX2.proxy;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "ApproxPI", targetNamespace = "myservices", wsdlLocation = "http://localhost:8089/EX2/ApproxPI?wsdl")
public class ApproxPI_Service
        extends Service {

    private final static URL APPROXPI_WSDL_LOCATION;
    private final static WebServiceException APPROXPI_EXCEPTION;
    private final static QName APPROXPI_QNAME = new QName("myservices", "ApproxPI");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8089/EX2/ApproxPI?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        APPROXPI_WSDL_LOCATION = url;
        APPROXPI_EXCEPTION = e;
    }

    public ApproxPI_Service() {
        super(__getWsdlLocation(), APPROXPI_QNAME);
    }

    public ApproxPI_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), APPROXPI_QNAME, features);
    }

    public ApproxPI_Service(URL wsdlLocation) {
        super(wsdlLocation, APPROXPI_QNAME);
    }

    public ApproxPI_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, APPROXPI_QNAME, features);
    }

    public ApproxPI_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ApproxPI_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (APPROXPI_EXCEPTION != null) {
            throw APPROXPI_EXCEPTION;
        }
        return APPROXPI_WSDL_LOCATION;
    }

    /**
     * @return returns ApproxPIService
     */
    @WebEndpoint(name = "ApproxPIServicePort")
    public ApproxPIService getApproxPIServicePort() {
        return super.getPort(new QName("myservices", "ApproxPIServicePort"), ApproxPIService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ApproxPIService
     */
    @WebEndpoint(name = "ApproxPIServicePort")
    public ApproxPIService getApproxPIServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("myservices", "ApproxPIServicePort"), ApproxPIService.class, features);
    }

}
